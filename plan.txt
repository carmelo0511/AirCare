# aws_cloudfront_distribution.aircare_distribution:
resource "aws_cloudfront_distribution" "aircare_distribution" {
    aliases                         = []
    arn                             = "arn:aws:cloudfront::304783065136:distribution/E1WRVG4O4ETFMN"
    caller_reference                = "388affe0-cc22-4e53-aa98-b345929ccf32"
    continuous_deployment_policy_id = null
    default_root_object             = null
    domain_name                     = "d1wvrgloixxub.cloudfront.net"
    enabled                         = true
    etag                            = "EVY3X3DMAAD2Z"
    hosted_zone_id                  = "Z2FDTNDATAQYW2"
    http_version                    = "http2"
    id                              = "E1WRVG4O4ETFMN"
    in_progress_validation_batches  = 0
    is_ipv6_enabled                 = true
    last_modified_time              = "2025-05-25 15:37:10.924 +0000 UTC"
    price_class                     = "PriceClass_All"
    retain_on_delete                = false
    staging                         = false
    status                          = "Deployed"
    tags                            = {}
    tags_all                        = {}
    trusted_key_groups              = [
        {
            enabled = false
            items   = []
        },
    ]
    trusted_signers                 = [
        {
            enabled = false
            items   = []
        },
    ]
    wait_for_deployment             = true
    web_acl_id                      = "arn:aws:wafv2:us-east-1:304783065136:global/webacl/CreatedByCloudFront-ce9f5ba8/285d6f03-bc64-426a-9fa0-9ab2b440cb08"

    default_cache_behavior {
        allowed_methods            = [
            "GET",
            "HEAD",
        ]
        cache_policy_id            = "4135ea2d-6df8-44a3-9df3-4b5a84be39ad"
        cached_methods             = [
            "GET",
            "HEAD",
        ]
        compress                   = true
        default_ttl                = 0
        field_level_encryption_id  = null
        max_ttl                    = 0
        min_ttl                    = 0
        origin_request_policy_id   = null
        realtime_log_config_arn    = null
        response_headers_policy_id = null
        smooth_streaming           = false
        target_origin_id           = "aircare-frontend-bryannakache.s3.ca-central-1.amazonaws.com"
        trusted_key_groups         = []
        trusted_signers            = []
        viewer_protocol_policy     = "redirect-to-https"

        grpc_config {
            enabled = false
        }
    }

    origin {
        connection_attempts      = 3
        connection_timeout       = 10
        domain_name              = "aircare-frontend-bryannakache.s3-website.ca-central-1.amazonaws.com"
        origin_access_control_id = null
        origin_id                = "aircare-frontend-bryannakache.s3.ca-central-1.amazonaws.com"
        origin_path              = null

        custom_origin_config {
            http_port                = 80
            https_port               = 443
            origin_keepalive_timeout = 5
            origin_protocol_policy   = "http-only"
            origin_read_timeout      = 30
            origin_ssl_protocols     = [
                "SSLv3",
                "TLSv1",
                "TLSv1.1",
                "TLSv1.2",
            ]
        }
    }

    restrictions {
        geo_restriction {
            locations        = []
            restriction_type = "none"
        }
    }

    viewer_certificate {
        acm_certificate_arn            = null
        cloudfront_default_certificate = true
        iam_certificate_id             = null
        minimum_protocol_version       = "TLSv1"
        ssl_support_method             = null
    }
}

# aws_cloudwatch_metric_alarm.lambda_alarm:
resource "aws_cloudwatch_metric_alarm" "lambda_alarm" {
    actions_enabled                       = true
    alarm_actions                         = [
        "arn:aws:sns:ca-central-1:304783065136:aircare-lambda-alerts",
    ]
    alarm_description                     = "Triggers when Lambda errors exceed 1 per minute"
    alarm_name                            = "AirCareLambdaErrors"
    arn                                   = "arn:aws:cloudwatch:ca-central-1:304783065136:alarm:AirCareLambdaErrors"
    comparison_operator                   = "GreaterThanOrEqualToThreshold"
    datapoints_to_alarm                   = 0
    dimensions                            = {
        "FunctionName" = "aircare-backend"
    }
    evaluate_low_sample_count_percentiles = null
    evaluation_periods                    = 1
    extended_statistic                    = null
    id                                    = "AirCareLambdaErrors"
    insufficient_data_actions             = []
    metric_name                           = "Errors"
    namespace                             = "AWS/Lambda"
    ok_actions                            = []
    period                                = 60
    statistic                             = "Sum"
    tags                                  = {}
    tags_all                              = {}
    threshold                             = 1
    threshold_metric_id                   = null
    treat_missing_data                    = "missing"
    unit                                  = null
}

# aws_dynamodb_table.history_table:
resource "aws_dynamodb_table" "history_table" {
    arn                         = "arn:aws:dynamodb:ca-central-1:304783065136:table/AirCareHistoryAQI"
    billing_mode                = "PAY_PER_REQUEST"
    deletion_protection_enabled = false
    hash_key                    = "location"
    id                          = "AirCareHistoryAQI"
    name                        = "AirCareHistoryAQI"
    range_key                   = "timestamp"
    read_capacity               = 0
    stream_arn                  = null
    stream_enabled              = false
    stream_label                = null
    stream_view_type            = null
    table_class                 = "STANDARD"
    tags                        = {
        "Project" = "AirCare"
    }
    tags_all                    = {
        "Project" = "AirCare"
    }
    write_capacity              = 0

    attribute {
        name = "location"
        type = "S"
    }
    attribute {
        name = "timestamp"
        type = "S"
    }

    point_in_time_recovery {
        enabled                 = false
        recovery_period_in_days = 0
    }

    ttl {
        attribute_name = null
        enabled        = false
    }
}

# aws_s3_bucket.frontend_bucket:
resource "aws_s3_bucket" "frontend_bucket" {
    acceleration_status         = null
    arn                         = "arn:aws:s3:::aircare-frontend-bryannakache"
    bucket                      = "aircare-frontend-bryannakache"
    bucket_domain_name          = "aircare-frontend-bryannakache.s3.amazonaws.com"
    bucket_prefix               = null
    bucket_regional_domain_name = "aircare-frontend-bryannakache.s3.ca-central-1.amazonaws.com"
    hosted_zone_id              = "Z1QDHH18159H29"
    id                          = "aircare-frontend-bryannakache"
    object_lock_enabled         = false
    policy                      = jsonencode(
        {
            Statement = [
                {
                    Action    = "s3:GetObject"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "arn:aws:s3:::aircare-frontend-bryannakache/*"
                    Sid       = "PublicReadGetObject"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    region                      = "ca-central-1"
    request_payer               = "BucketOwner"
    tags                        = {}
    tags_all                    = {}
    website_domain              = "s3-website.ca-central-1.amazonaws.com"
    website_endpoint            = "aircare-frontend-bryannakache.s3-website.ca-central-1.amazonaws.com"

    grant {
        id          = "92422c66ebd02a69dfd02eca6af51408a7aad64b937b9c50b42c203a632bcd69"
        permissions = [
            "FULL_CONTROL",
        ]
        type        = "CanonicalUser"
        uri         = null
    }

    server_side_encryption_configuration {
        rule {
            bucket_key_enabled = false

            apply_server_side_encryption_by_default {
                kms_master_key_id = null
                sse_algorithm     = "AES256"
            }
        }
    }

    versioning {
        enabled    = true
        mfa_delete = false
    }

    website {
        error_document           = "index.html"
        index_document           = "index.html"
        redirect_all_requests_to = null
        routing_rules            = null
    }
}
