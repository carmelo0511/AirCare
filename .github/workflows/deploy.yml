name: Deploy AirCare Infrastructure & App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy AirCare Stack
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📁 Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: 🧪 Run backend tests
        run: |
          cd backend
          npm test --silent

      - name: 🗃️ Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}

      - name: ☁️ Sync S3 bucket (frontend)
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ca-central-1'
          SOURCE_DIR: './frontend'

      - name: 🔄 Invalidate CloudFront cache
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ca-central-1'
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DIST_ID }}
          PATHS: "/*"

      - name: 🧰 Install zip tool
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: 📦 Package Lambda
        run: |
          cd backend
          zip -r ../lambda.zip . -x "*.git*" "*.zip"
          cd ..

      - name: 🏗️ Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: 🧹 Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check -recursive

      - name: ✅ Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: 🧱 Terraform Init
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ca-central-1'
        run: terraform init -input=false

      - name: 🔄 Terraform Import Resources (idempotent)
        working-directory: ./terraform
        run: |
          terraform import aws_s3_bucket.frontend_bucket "${{ secrets.AWS_S3_BUCKET }}" || true
          terraform import aws_iam_role.lambda_exec lambda_exec_role || true
          terraform import aws_dynamodb_table.history_table AirCareHistoryAQI || true

      - name: 🚀 Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: 🚀 Deploy Lambda function
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://lambda.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ca-central-1'
